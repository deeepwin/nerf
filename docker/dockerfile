#
# FILE: dockerfile
#
# DESCRIPTION: Docker image for NeRF experiments
#
# AUTHOR: Deeepwin
#
# DATE: 04.08.2023
#
# USAGE: 
#
# To create docker image
#
#   1. Go to folder where dockerfile is located
#   2. Run `docker build -t nerf`
#
# To check CUDA version in Docker image
# 
#   docker run -it --gpus all <docker tag> nvidia-smi
#

# includes CUDA 11.3.1, cuDNN 8.2.0.53
FROM nvidia/cuda:11.3.1-cudnn8-devel-ubuntu20.04

# keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE=1

# turns off buffering for easier container logging
ENV PYTHONUNBUFFERED=1

# set timezone 
ENV TZ=Europe/Zurich

# force non-interactive 
ARG DEBIAN_FRONTEND=noninteractive

# for installation use bash, shell will not work well
SHELL ["/bin/bash", "-c"]

# create user, but to not yet activate
RUN useradd -rm -d /home/ipca -s /bin/bash -g root -G sudo -u 1001 ipca
WORKDIR /home/ipca

# install python base package
RUN apt-get update \
    && apt-get -y install python3.8 \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1 \
    && apt-get -y install python3.8-venv \
    && apt-get install -y python3-opencv \
    && apt-get -y install git

# setup virtual environments
RUN mkdir envs \
    && python3 -m venv envs/sdfstudio \
    && python3 -m venv envs/nerfstudio

# setup environment variables
ENV CUDA_HOME /usr/local/cuda-11.3

# install in sdfstudio and tinydudnn
RUN source envs/sdfstudio/bin/activate \
    && pip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 -f https://download.pytorch.org/whl/torch_stable.html

# cuda tool kit, check with nvcc --verion
RUN apt-get -y install nvidia-cuda-toolkit \
    && apt-get -y install nvidia-utils-535

# install c compiler version 9
RUN apt-get -y install g++-9 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9 \
    && update-alternatives --config g++ \
    && apt-get -y install gcc-9 \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9 \
    && update-alternatives --config gcc

# RUN source envs/sdfstudio/bin/activate \
#     && pip install ninja git+https://github.com/NVlabs/tiny-cuda-nn/#subdirectory=bindings/torch

# install nerfstudio, base for sdfstudio as well
#RUN pip install nerfstudio

# activate user
#USER ipca

ENV PORT 8080

